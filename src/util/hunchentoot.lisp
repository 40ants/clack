#|
  This file is a part of Clack package.
  URL: http://github.com/fukamachi/clack
  Copyright (c) 2011 Eitarow Fukamachi <e.arrows@gmail.com>

  Clack is freely distributable under the LLGPL License.
|#

#|
  Clack.Util.Hunchentoot
  This package is ported from Hunchentoot, Lisp Web server.

  Only these function and variables, in this file, under BSD-style license.

  Copyright (c) 2004-2010, Dr. Edmund Weitz. All rights reserved.
|#

(in-package :cl-user)

(defpackage clack.util.hunchentoot
  (:use :cl
        :flexi-streams
        :rfc2388)
  (:export :format-rfc1123-timestring
           :parse-rfc2388-form-data
           :mime-type
           :url-decode))

(in-package :clack.util.hunchentoot)

(defparameter +day-names+
              #("Mon" "Tue" "Wed" "Thu" "Fri" "Sat" "Sun")
  "The three-character names of the seven days of the week - needed
for cookie date format.")

(defparameter +month-names+
              #("Jan" "Feb" "Mar" "Apr" "May" "Jun" "Jul" "Aug" "Sep" "Oct" "Nov" "Dec")
  "The three-character names of the twelve months - needed for cookie
date format.")

(defun format-rfc1123-timestring (&optional (time (get-universal-time)))
  "Generates a time string according to RFC 1123.  Default is current time."
  (multiple-value-bind
        (second minute hour date month year day-of-week)
      (decode-universal-time time 0)
    (format nil "~A, ~2,'0d ~A ~4d ~2,'0d:~2,'0d:~2,'0d GMT"
            (svref +day-names+ day-of-week)
            date
            (svref +month-names+ (1- month))
            year
            hour
            minute
            second)))

(defparameter *mime-type-list* '(("application/andrew-inset" "ez")
                                 ("application/cu-seeme" "cu")
                                 ("application/dsptype" "tsp")
                                 ("application/futuresplash" "spl")
                                 ("application/hta" "hta")
                                 ("application/java-archive" "jar")
                                 ("application/java-serialized-object" "ser")
                                 ("application/java-vm" "class")
                                 ("application/mac-binhex40" "hqx")
                                 ("application/mac-compactpro" "cpt")
                                 ("application/mathematica" "nb")
                                 ("application/msaccess" "mdb")
                                 ("application/msword" "doc" "dot")
                                 ("application/octet-stream" "bin")
                                 ("application/oda" "oda")
                                 ("application/ogg" "ogg")
                                 ("application/pdf" "pdf")
                                 ("application/pgp-keys" "key")
                                 ("application/pgp-signature" "pgp")
                                 ("application/pics-rules" "prf")
                                 ("application/postscript" "ps" "ai" "eps")
                                 ("application/rar" "rar")
                                 ("application/rdf+xml" "rdf")
                                 ("application/rss+xml" "rss")
                                 ("application/smil" "smi" "smil")
                                 ("application/wordperfect" "wpd")
                                 ("application/wordperfect5.1" "wp5")
                                 ("application/xhtml+xml" "xhtml" "xht")
                                 ("application/xml" "fo" "xml" "xsl")
                                 ("application/zip" "zip")
                                 ("application/vnd.cinderella" "cdy")
                                 ("application/vnd.mozilla.xul+xml" "xul")
                                 ("application/vnd.ms-excel" "xls" "xlb" "xlt")
                                 ("application/vnd.ms-pki.seccat" "cat")
                                 ("application/vnd.ms-pki.stl" "stl")
                                 ("application/vnd.ms-powerpoint" "ppt" "pps")
                                 ("application/vnd.oasis.opendocument.chart" "odc")
                                 ("application/vnd.oasis.opendocument.database" "odb")
                                 ("application/vnd.oasis.opendocument.formula" "odf")
                                 ("application/vnd.oasis.opendocument.graphics" "odg")
                                 ("application/vnd.oasis.opendocument.graphics-template" "otg")
                                 ("application/vnd.oasis.opendocument.image" "odi")
                                 ("application/vnd.oasis.opendocument.presentation" "odp")
                                 ("application/vnd.oasis.opendocument.presentation-template" "otp")
                                 ("application/vnd.oasis.opendocument.spreadsheet" "ods")
                                 ("application/vnd.oasis.opendocument.spreadsheet-template" "ots")
                                 ("application/vnd.oasis.opendocument.text" "odt")
                                 ("application/vnd.oasis.opendocument.text-master" "odm")
                                 ("application/vnd.oasis.opendocument.text-template" "ott")
                                 ("application/vnd.oasis.opendocument.text-web" "oth")
                                 ("application/vnd.rim.cod" "cod")
                                 ("application/vnd.smaf" "mmf")
                                 ("application/vnd.stardivision.calc" "sdc")
                                 ("application/vnd.stardivision.draw" "sda")
                                 ("application/vnd.stardivision.impress" "sdd" "sdp")
                                 ("application/vnd.stardivision.math" "smf")
                                 ("application/vnd.stardivision.writer" "sdw" "vor")
                                 ("application/vnd.stardivision.writer-global" "sgl")
                                 ("application/vnd.sun.xml.calc" "sxc")
                                 ("application/vnd.sun.xml.calc.template" "stc")
                                 ("application/vnd.sun.xml.draw" "sxd")
                                 ("application/vnd.sun.xml.draw.template" "std")
                                 ("application/vnd.sun.xml.impress" "sxi")
                                 ("application/vnd.sun.xml.impress.template" "sti")
                                 ("application/vnd.sun.xml.math" "sxm")
                                 ("application/vnd.sun.xml.writer" "sxw")
                                 ("application/vnd.sun.xml.writer.global" "sxg")
                                 ("application/vnd.sun.xml.writer.template" "stw")
                                 ("application/vnd.symbian.install" "sis")
                                 ("application/vnd.visio" "vsd")
                                 ("application/vnd.wap.wbxml" "wbxml")
                                 ("application/vnd.wap.wmlc" "wmlc")
                                 ("application/vnd.wap.wmlscriptc" "wmlsc")
                                 ("application/x-123" "wk")
                                 ("application/x-abiword" "abw")
                                 ("application/x-apple-diskimage" "dmg")
                                 ("application/x-bcpio" "bcpio")
                                 ("application/x-bittorrent" "torrent")
                                 ("application/x-cdf" "cdf")
                                 ("application/x-cdlink" "vcd")
                                 ("application/x-chess-pgn" "pgn")
                                 ("application/x-cpio" "cpio")
                                 ("application/x-csh" "csh")
                                 ("application/x-debian-package" "deb" "udeb")
                                 ("application/x-director" "dcr" "dir" "dxr")
                                 ("application/x-dms" "dms")
                                 ("application/x-doom" "wad")
                                 ("application/x-dvi" "dvi")
                                 ("application/x-flac" "flac")
                                 ("application/x-font" "pfa" "pfb" "gsf" "pcf")
                                 ("application/x-freemind" "mm")
                                 ("application/x-futuresplash" "spl")
                                 ("application/x-gnumeric" "gnumeric")
                                 ("application/x-go-sgf" "sgf")
                                 ("application/x-graphing-calculator" "gcf")
                                 ("application/x-gtar" "gtar" "tgz" "taz")
                                 ("application/x-hdf" "hdf")
                                 ("application/x-httpd-php" "phtml" "pht" "php")
                                 ("application/x-httpd-php-source" "phps")
                                 ("application/x-httpd-php3" "php3")
                                 ("application/x-httpd-php3-preprocessed" "php3p")
                                 ("application/x-httpd-php4" "php4")
                                 ("application/x-ica" "ica")
                                 ("application/x-internet-signup" "ins" "isp")
                                 ("application/x-iphone" "iii")
                                 ("application/x-iso9660-image" "iso")
                                 ("application/x-java-jnlp-file" "jnlp")
                                 ("application/x-javascript" "js")
                                 ("application/x-jmol" "jmz")
                                 ("application/x-kchart" "chrt")
                                 ("application/x-killustrator" "kil")
                                 ("application/x-koan" "skp" "skd" "skt" "skm")
                                 ("application/x-kpresenter" "kpr" "kpt")
                                 ("application/x-kspread" "ksp")
                                 ("application/x-kword" "kwd" "kwt")
                                 ("application/x-latex" "latex")
                                 ("application/x-lha" "lha")
                                 ("application/x-lzh" "lzh")
                                 ("application/x-lzx" "lzx")
                                 ("application/x-maker" "frm" "maker" "frame" "fm" "fb" "book" "fbdoc")
                                 ("application/x-mif" "mif")
                                 ("application/x-ms-wmd" "wmd")
                                 ("application/x-ms-wmz" "wmz")
                                 ("application/x-msdos-program" "com" "exe" "bat" "dll")
                                 ("application/x-msi" "msi")
                                 ("application/x-netcdf" "nc")
                                 ("application/x-ns-proxy-autoconfig" "pac")
                                 ("application/x-nwc" "nwc")
                                 ("application/x-object" "o")
                                 ("application/x-oz-application" "oza")
                                 ("application/x-pkcs7-certreqresp" "p7r")
                                 ("application/x-pkcs7-crl" "crl")
                                 ("application/x-python-code" "pyc" "pyo")
                                 ("application/x-quicktimeplayer" "qtl")
                                 ("application/x-redhat-package-manager" "rpm")
                                 ("application/x-sh" "sh")
                                 ("application/x-shar" "shar")
                                 ("application/x-shockwave-flash" "swf" "swfl")
                                 ("application/x-stuffit" "sit")
                                 ("application/x-sv4cpio" "sv4cpio")
                                 ("application/x-sv4crc" "sv4crc")
                                 ("application/x-tar" "tar")
                                 ("application/x-tcl" "tcl")
                                 ("application/x-tex-gf" "gf")
                                 ("application/x-tex-pk" "pk")
                                 ("application/x-texinfo" "texinfo" "texi")
                                 ("application/x-trash" "~%" "" "bak" "old" "sik")
                                 ("application/x-troff" "tt" "r" "roff")
                                 ("application/x-troff-man" "man")
                                 ("application/x-troff-me" "me")
                                 ("application/x-troff-ms" "ms")
                                 ("application/x-ustar" "ustar")
                                 ("application/x-wais-source" "src")
                                 ("application/x-wingz" "wz")
                                 ("application/x-x509-ca-cert" "crt")
                                 ("application/x-xcf" "xcf")
                                 ("application/x-xfig" "fig")
                                 ("application/x-xpinstall" "xpi")
                                 ("audio/basic" "au" "snd")
                                 ("audio/midi" "mid" "midi" "kar")
                                 ("audio/mpeg" "mpga" "mpega" "mp2" "mp3" "m4a")
                                 ("audio/mpegurl" "m3u")
                                 ("audio/prs.sid" "sid")
                                 ("audio/x-aiff" "aif" "aiff" "aifc")
                                 ("audio/x-gsm" "gsm")
                                 ("audio/x-mpegurl" "m3u")
                                 ("audio/x-ms-wma" "wma")
                                 ("audio/x-ms-wax" "wax")
                                 ("audio/x-pn-realaudio" "ra" "rm" "ram")
                                 ("audio/x-realaudio" "ra")
                                 ("audio/x-scpls" "pls")
                                 ("audio/x-sd2" "sd2")
                                 ("audio/x-wav" "wav")
                                 ("chemical/x-alchemy" "alc")
                                 ("chemical/x-cache" "cac" "cache")
                                 ("chemical/x-cache-csf" "csf")
                                 ("chemical/x-cactvs-binary" "cbin" "cascii" "ctab")
                                 ("chemical/x-cdx" "cdx")
                                 ("chemical/x-cerius" "cer")
                                 ("chemical/x-chem3d" "c3d")
                                 ("chemical/x-chemdraw" "chm")
                                 ("chemical/x-cif" "cif")
                                 ("chemical/x-cmdf" "cmdf")
                                 ("chemical/x-cml" "cml")
                                 ("chemical/x-compass" "cpa")
                                 ("chemical/x-crossfire" "bsd")
                                 ("chemical/x-csml" "csml" "csm")
                                 ("chemical/x-ctx" "ctx")
                                 ("chemical/x-cxf" "cxf" "cef")
                                 ("chemical/x-embl-dl-nucleotide" "emb" "embl")
                                 ("chemical/x-galactic-spc" "spc")
                                 ("chemical/x-gamess-input" "inp" "gam" "gamin")
                                 ("chemical/x-gaussian-checkpoint" "fch" "fchk")
                                 ("chemical/x-gaussian-cube" "cub")
                                 ("chemical/x-gaussian-input" "gau" "gjc" "gjf")
                                 ("chemical/x-gaussian-log" "gal")
                                 ("chemical/x-gcg8-sequence" "gcg")
                                 ("chemical/x-genbank" "gen")
                                 ("chemical/x-hin" "hin")
                                 ("chemical/x-isostar" "istr" "ist")
                                 ("chemical/x-jcamp-dx" "jdx" "dx")
                                 ("chemical/x-kinemage" "kin")
                                 ("chemical/x-macmolecule" "mcm")
                                 ("chemical/x-macromodel-input" "mmd" "mmod")
                                 ("chemical/x-mdl-molfile" "mol")
                                 ("chemical/x-mdl-rdfile" "rd")
                                 ("chemical/x-mdl-rxnfile" "rxn")
                                 ("chemical/x-mdl-sdfile" "sd" "sdf")
                                 ("chemical/x-mdl-tgf" "tgf")
                                 ("chemical/x-mmcif" "mcif")
                                 ("chemical/x-mol2" "mol2")
                                 ("chemical/x-molconn-Z" "b")
                                 ("chemical/x-mopac-graph" "gpt")
                                 ("chemical/x-mopac-input" "mop" "mopcrt" "mpc" "dat" "zmt")
                                 ("chemical/x-mopac-out" "moo")
                                 ("chemical/x-mopac-vib" "mvb")
                                 ("chemical/x-ncbi-asn1" "asn")
                                 ("chemical/x-ncbi-asn1-ascii" "prt" "ent")
                                 ("chemical/x-ncbi-asn1-binary" "val" "aso")
                                 ("chemical/x-ncbi-asn1-spec" "asn")
                                 ("chemical/x-pdb" "pdb" "ent")
                                 ("chemical/x-rosdal" "ros")
                                 ("chemical/x-swissprot" "sw")
                                 ("chemical/x-vamas-iso14976" "vms")
                                 ("chemical/x-vmd" "vmd")
                                 ("chemical/x-xtel" "xtel")
                                 ("chemical/x-xyz" "xyz")
                                 ("image/gif" "gif")
                                 ("image/ief" "ief")
                                 ("image/jpeg" "jpeg" "jpg" "jpe")
                                 ("image/pcx" "pcx")
                                 ("image/png" "png")
                                 ("image/svg+xml" "svg" "svgz")
                                 ("image/tiff" "tiff" "tif")
                                 ("image/vnd.djvu" "djvu" "djv")
                                 ("image/vnd.wap.wbmp" "wbmp")
                                 ("image/x-cmu-raster" "ras")
                                 ("image/x-coreldraw" "cdr")
                                 ("image/x-coreldrawpattern" "pat")
                                 ("image/x-coreldrawtemplate" "cdt")
                                 ("image/x-corelphotopaint" "cpt")
                                 ("image/x-icon" "ico")
                                 ("image/x-jg" "art")
                                 ("image/x-jng" "jng")
                                 ("image/x-ms-bmp" "bmp")
                                 ("image/x-photoshop" "psd")
                                 ("image/x-portable-anymap" "pnm")
                                 ("image/x-portable-bitmap" "pbm")
                                 ("image/x-portable-graymap" "pgm")
                                 ("image/x-portable-pixmap" "ppm")
                                 ("image/x-rgb" "rgb")
                                 ("image/x-xbitmap" "xbm")
                                 ("image/x-xpixmap" "xpm")
                                 ("image/x-xwindowdump" "xwd")
                                 ("model/iges" "igs" "iges")
                                 ("model/mesh" "msh" "mesh" "silo")
                                 ("model/vrml" "wrl" "vrml")
                                 ("text/calendar" "ics" "icz")
                                 ("text/comma-separated-values" "csv")
                                 ("text/css" "css")
                                 ("text/h323" "323")
                                 ("text/html" "html" "htm" "shtml")
                                 ("text/iuls" "uls")
                                 ("text/mathml" "mml")
                                 ("text/plain" "asc" "txt" "text" "diff" "pot")
                                 ("text/richtext" "rtx")
                                 ("text/rtf" "rtf")
                                 ("text/scriptlet" "sct" "wsc")
                                 ("text/texmacs" "tm" "ts")
                                 ("text/tab-separated-values" "tsv")
                                 ("text/vnd.sun.j2me.app-descriptor" "jad")
                                 ("text/vnd.wap.wml" "wml")
                                 ("text/vnd.wap.wmlscript" "wmls")
                                 ("text/x-bibtex" "bib")
                                 ("text/x-boo" "boo")
                                 ("text/x-c++hdr" "h++" "hpp" "hxx" "hh")
                                 ("text/x-c++src" "c++" "cpp" "cxx" "cc")
                                 ("text/x-chdr" "h")
                                 ("text/x-component" "htc")
                                 ("text/x-csh" "csh")
                                 ("text/x-csrc" "c")
                                 ("text/x-dsrc" "d")
                                 ("text/x-haskell" "hs")
                                 ("text/x-java" "java")
                                 ("text/javascript" "js")
                                 ("text/x-literate-haskell" "lhs")
                                 ("text/x-moc" "moc")
                                 ("text/x-pascal" "pp" "as")
                                 ("text/x-pcs-gcd" "gcd")
                                 ("text/x-perl" "pl" "pm")
                                 ("text/x-python" "py")
                                 ("text/x-setext" "etx")
                                 ("text/x-sh" "sh")
                                 ("text/x-tcl" "tcl" "tk")
                                 ("text/x-tex" "tex" "ltx" "sty" "cls")
                                 ("text/x-vcalendar" "vcs")
                                 ("text/x-vcard" "vcf")
                                 ("video/dl" "dl")
                                 ("video/dv" "dif" "dv")
                                 ("video/fli" "fli")
                                 ("video/gl" "gl")
                                 ("video/mpeg" "mpeg" "mpg" "mpe")
                                 ("video/mp4" "mp4")
                                 ("video/quicktime" "qt" "mov")
                                 ("video/vnd.mpegurl" "mxu")
                                 ("video/x-la-asf" "lsf" "lsx")
                                 ("video/x-mng" "mng")
                                 ("video/x-ms-asf" "asf" "asx")
                                 ("video/x-ms-wm" "wm")
                                 ("video/x-ms-wmv" "wmv")
                                 ("video/x-ms-wmx" "wmx")
                                 ("video/x-ms-wvx" "wvx")
                                 ("video/x-msvideo" "avi")
                                 ("video/x-sgi-movie" "movie")
                                 ("x-conference/x-cooltalk" "ice")
                                 ("x-world/x-vrml" "vrm" "vrml" "wrl"))
  "An alist where the cars are MIME types and the cdrs are list
of file suffixes for the corresponding type.")

(defparameter *mime-type-hash*
  (let ((hash (make-hash-table :test #'equalp)))
    (loop for (type . suffixes) in *mime-type-list* do
          (loop for suffix in suffixes do
                (setf (gethash suffix hash) type)))
    hash)
  "A hash table which maps file suffixes to MIME types.")

(defun mime-type (pathspec)
  "Given a pathname designator PATHSPEC returns the MIME type
\(as a string) corresponding to the suffix of the file denoted by
PATHSPEC \(or NIL)."
  (gethash (pathname-type pathspec) *mime-type-hash*))

(defun convert-hack (string external-format)
  "The rfc2388 package is buggy in that it operates on a character
stream and thus only accepts encodings which are 8 bit transparent.
In order to support different encodings for parameter values
submitted, we post process whatever string values the rfc2388 package
has returned."
  (flex:octets-to-string (map '(vector (unsigned-byte 8) *) 'char-code string)
                         :external-format external-format))

(defun parse-rfc2388-form-data (stream content-type-header external-format)
  "Creates an alist of POST parameters from the stream STREAM which is
supposed to be of content type 'multipart/form-data'."
  (let* ((parsed-content-type-header (rfc2388:parse-header content-type-header :value))
	 (boundary (or (cdr (rfc2388:find-parameter
                             "BOUNDARY"
                             (rfc2388:header-parameters parsed-content-type-header)))
		       (return-from parse-rfc2388-form-data))))
    (loop for part in (rfc2388:parse-mime stream boundary)
          for headers = (rfc2388:mime-part-headers part)
          for content-disposition-header = (rfc2388:find-content-disposition-header headers)
          for name = (cdr (rfc2388:find-parameter
                           "NAME"
                           (rfc2388:header-parameters content-disposition-header)))
          when name
          collect (cons name
                        (let ((contents (rfc2388:mime-part-contents part)))
                          (if (pathnamep contents)
                            (list contents
                                  (rfc2388:get-file-name headers)
                                  (rfc2388:content-type part :as-string t))
                            (convert-hack contents external-format)))))))

(defvar *hunchentoot-default-external-format*
    (make-external-format :latin1 :eol-style :lf)
  "The external format used to compute the REQUEST object.")

(defmacro upgrade-vector (vector new-type &key converter)
  "Returns a vector with the same length and the same elements as
VECTOR \(a variable holding a vector) but having element type
NEW-TYPE.  If CONVERTER is not NIL, it should designate a function
which will be applied to each element of VECTOR before the result is
stored in the new vector.  The resulting vector will have a fill
pointer set to its end.

The macro also uses SETQ to store the new vector in VECTOR."
  `(setq ,vector
         (loop with length = (length ,vector)
               with new-vector = (make-array length
                                             :element-type ,new-type
                                             :fill-pointer length)
               for i below length
               do (setf (aref new-vector i) ,(if converter
                                               `(funcall ,converter (aref ,vector i))
                                               `(aref ,vector i)))
               finally (return new-vector))))

(defun url-decode (string &optional (external-format *hunchentoot-default-external-format*))
  "Decodes a URL-encoded STRING which is assumed to be encoded using
the external format EXTERNAL-FORMAT."
  (when (zerop (length string))
    (return-from url-decode ""))
  (let ((vector (make-array (length string) :element-type 'octet :fill-pointer 0))
        (i 0)
        unicodep)
    (loop
      (unless (< i (length string))
        (return))
      (let ((char (aref string i)))
       (labels ((decode-hex (length)
                  (prog1
                      (parse-integer string :start i :end (+ i length) :radix 16)
                    (incf i length)))
                (push-integer (integer)
                  (vector-push integer vector))
                (peek ()
                  (aref string i))
                (advance ()
                  (setq char (peek))
                  (incf i)))
         (cond
          ((char= #\% char)
           (advance)
           (cond
            ((char= #\u (peek))
             (unless unicodep
               (setq unicodep t)
               (upgrade-vector vector '(integer 0 65535)))
             (advance)
             (push-integer (decode-hex 4)))
            (t
             (push-integer (decode-hex 2)))))
          (t
           (push-integer (char-code (case char
                                      ((#\+) #\Space)
                                      (otherwise char))))
           (advance))))))
    (cond (unicodep
           (upgrade-vector vector 'character :converter #'code-char))
          (t (octets-to-string vector :external-format external-format)))))
